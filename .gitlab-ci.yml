variables:
  VERSION: "2.14.0"
  ECR_NAMESPACE: "truedat"
  K8S_DEPLOYMENT: "dl"
  K8S_CONTAINER: "dl"

stages:
  - test
  - deploy

test:
  stage: test
  tags:
    - docker-compose
  before_script:
    - cd ci
    - docker-compose up -d neo
  script:
    - docker-compose run test
  after_script:
    - cd ci
    - docker-compose down

deploy:
  stage: deploy
  tags:
    - kubectl
  only:
    - master
    - tags
  script:
    - git branch -f master HEAD
    - export VERSION=${CI_COMMIT_TAG:-${VERSION}-alpha.${CI_PIPELINE_ID}}
    - docker build -t ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
    - docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION mesosphere/aws-cli ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION} | awk '{ sub("\r$", ""); print }' > output
    - bash -f output
    - export ECR=$(cat output | egrep -o 'https?://[^ ]+' | awk -F/ '{print $3}')
    - rm output
    - docker tag ${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${VERSION}
    - docker push ${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${VERSION}
    - kubectl set image deployment.v1.apps/${K8S_DEPLOYMENT} ${K8S_CONTAINER}=${ECR}/${ECR_NAMESPACE}/${CI_PROJECT_NAME}:${VERSION} --record
